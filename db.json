{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/img/ironman-draw.png","path":"img/ironman-draw.png","modified":0,"renderable":0},{"_id":"source/img/language_processing_system.jpg","path":"img/language_processing_system.jpg","modified":0,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/signature/Just-do-it-white.png","path":"img/signature/Just-do-it-white.png","modified":0,"renderable":0},{"_id":"source/img/signature/dusign.png","path":"img/signature/dusign.png","modified":0,"renderable":0},{"_id":"themes/snail/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/snail/source/css/dusign-common-dark.css","path":"css/dusign-common-dark.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/dusign-dark.css","path":"css/dusign-dark.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/dusign-light.css","path":"css/dusign-light.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/dusign-common-light.css","path":"css/dusign-common-light.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/font-awesome.star.css","path":"css/font-awesome.star.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/font-awesome.css","path":"css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/fonts.googleapis.css","path":"css/fonts.googleapis.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/snail/source/css/rocket.styl","path":"css/rocket.styl","modified":0,"renderable":1},{"_id":"themes/snail/source/css/photography.css","path":"css/photography.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/signature.styl","path":"css/signature.styl","modified":0,"renderable":1},{"_id":"themes/snail/source/css/toc.styl","path":"css/toc.styl","modified":0,"renderable":1},{"_id":"themes/snail/source/css/widget.styl","path":"css/widget.styl","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/js/canvas-nest.js","path":"js/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/line.js","path":"js/line.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/mouse-click.js","path":"js/mouse-click.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/ribbonDynamic.js","path":"js/ribbonDynamic.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/ribbonStatic.js","path":"js/ribbonStatic.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/snail/source/img/cd_tou.png","path":"img/cd_tou.png","modified":0,"renderable":1},{"_id":"themes/snail/source/img/cd.png","path":"img/cd.png","modified":0,"renderable":1},{"_id":"themes/snail/source/img/default.jpg","path":"img/default.jpg","modified":0,"renderable":1},{"_id":"themes/snail/source/img/notice.png","path":"img/notice.png","modified":0,"renderable":1},{"_id":"themes/snail/source/img/top-light.png","path":"img/top-light.png","modified":0,"renderable":1},{"_id":"themes/snail/source/img/tp.png","path":"img/tp.png","modified":0,"renderable":1},{"_id":"themes/snail/source/img/wave-dark.png","path":"img/wave-dark.png","modified":0,"renderable":1},{"_id":"themes/snail/source/img/wave-light.png","path":"img/wave-light.png","modified":0,"renderable":1},{"_id":"themes/snail/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/snail/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/img/default.jpg","path":"img/default.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/categories-bg.jpg","path":"img/header_img/categories-bg.jpg","modified":0,"renderable":0},{"_id":"themes/snail/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/images/ironman.png","path":"css/images/ironman.png","modified":0,"renderable":1},{"_id":"themes/snail/source/css/images/rocket.png","path":"css/images/rocket.png","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3g3D_vx3rCubqg.woff2","path":"fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3g3D_vx3rCubqg.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gTD_vx3rCubqg.woff2","path":"fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gTD_vx3rCubqg.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gfD_vx3rCubqg.woff2","path":"fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gfD_vx3rCubqg.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gbD_vx3rCubqg.woff2","path":"fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gbD_vx3rCubqg.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gnD_vx3rCs.woff2","path":"fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gnD_vx3rCs.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459W1hyyTh89ZNpQ.woff2","path":"fonts/googleapis/JTUSjIg1_i6t8kCHKm459W1hyyTh89ZNpQ.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WRhyyTh89ZNpQ.woff2","path":"fonts/googleapis/JTUSjIg1_i6t8kCHKm459WRhyyTh89ZNpQ.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WZhyyTh89ZNpQ.woff2","path":"fonts/googleapis/JTUSjIg1_i6t8kCHKm459WZhyyTh89ZNpQ.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WdhyyTh89ZNpQ.woff2","path":"fonts/googleapis/JTUSjIg1_i6t8kCHKm459WdhyyTh89ZNpQ.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WlhyyTh89Y.woff2","path":"fonts/googleapis/JTUSjIg1_i6t8kCHKm459WlhyyTh89Y.woff2","modified":0,"renderable":1},{"_id":"themes/snail/source/js/music-player/utill.js","path":"js/music-player/utill.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/music-player/player.js","path":"js/music-player/player.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"themes/snail/source/js/music-player/jquery.min.js","path":"js/music-player/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/snail/source/css/music-player/css/player.css","path":"css/music-player/css/player.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/music-player/css/reset.css","path":"css/music-player/css/reset.css","modified":0,"renderable":1},{"_id":"themes/snail/source/css/music-player/fonts/iconfont.css","path":"css/music-player/fonts/iconfont.css","modified":0,"renderable":1},{"_id":"themes/snail/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/img/header_img/home-bg-1-dark.jpg","path":"img/header_img/home-bg-1-dark.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/tag-bg.jpg","path":"img/header_img/tag-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/photography-bg.jpeg","path":"img/header_img/photography-bg.jpeg","modified":0,"renderable":0},{"_id":"source/img/header_img/archive-bg.jpg","path":"img/header_img/archive-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/Iron-Man-3.jpg","path":"img/header_img/Iron-Man-3.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"690fed92322a4e9bf00266b0d7af4e0a6066031e","modified":1711862846181},{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1711862846221},{"_id":"source/CNAME","hash":"55d5b0b4757a7d65ee4966dd161f394d06d257b7","modified":1711862846252},{"_id":"source/robots.txt","hash":"a501cb86e0537a749c344cb413bace53b49b147c","modified":1711862846298},{"_id":"themes/snail/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1711862840785},{"_id":"themes/snail/.DS_Store","hash":"783a3e27be97b986d0aa6bcc8e7334c52d17961c","modified":1711862840740},{"_id":"themes/snail/_config.yml","hash":"5d235aa7716657282795ee86d9c9db2374197a66","modified":1711877914093},{"_id":"source/_posts/.DS_Store","hash":"a04ebe66fb85ce923d4ac52d351b7da0babaa3bd","modified":1711862846401},{"_id":"source/_posts/2024-03-31-正则表达式.md","hash":"1a3b0d5eb73675fac0b2f4bf1488f8e08c4883af","modified":1713002982150},{"_id":"source/_posts/2024-04-13-cd-overview.md","hash":"017d9d14bf633d604e14c059340c8188a326b148","modified":1713002797106},{"_id":"source/about/index.md","hash":"8013ea02232a7e9a344554a5c035d65d964f0bdc","modified":1711862846787},{"_id":"source/categories/index.md","hash":"21d19b60e8ff657b5073559a3999827f984be754","modified":1711862846904},{"_id":"source/archive/index.md","hash":"d63d51339384b2e5c6dd3a15cdc2ebacb941534c","modified":1711862846849},{"_id":"source/img/.DS_Store","hash":"c8eb7d4770d557f07789af0d7d33bebba448f5a8","modified":1711862846951},{"_id":"source/tags/index.md","hash":"f43ff71cb3947205af39adf07e182f4b70fdde33","modified":1711862848333},{"_id":"source/img/ironman-draw.png","hash":"bf6b382fe359ae325b72c485c1eb73ee024b4dc1","modified":1711862847156},{"_id":"source/img/language_processing_system.jpg","hash":"9d995fa7143c6bdef46f1880d7d4c63c721be922","modified":1713001094109},{"_id":"themes/snail/languages/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1711862840868},{"_id":"themes/snail/languages/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1711862840942},{"_id":"themes/snail/languages/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1711862840895},{"_id":"themes/snail/languages/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1711862840982},{"_id":"themes/snail/languages/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1711862841021},{"_id":"themes/snail/languages/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1711862841052},{"_id":"themes/snail/languages/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1711862841213},{"_id":"themes/snail/languages/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1711862841167},{"_id":"themes/snail/languages/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1711862841111},{"_id":"themes/snail/layout/.DS_Store","hash":"e45cdab01049822593cf65f23f18a828ea573ab9","modified":1711862841260},{"_id":"themes/snail/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1711862841320},{"_id":"themes/snail/layout/about.ejs","hash":"a946b4a2467fbc4709b8615f769936152a9f7f8a","modified":1711862841366},{"_id":"themes/snail/layout/archive.ejs","hash":"ed6040ae31c2c63095e17ed96c50d7fb8e8804ff","modified":1711862841410},{"_id":"themes/snail/layout/categories.ejs","hash":"fb74aa2ce5a03ae5ffdbccbde20111b92e544c16","modified":1711862841462},{"_id":"themes/snail/layout/index.ejs","hash":"3cc1c970be9821efbc1d01e8887729c357637500","modified":1711862841521},{"_id":"themes/snail/layout/layout.ejs","hash":"6638de448dc3b600391f1200a7e7812a354758c5","modified":1711862841630},{"_id":"themes/snail/source/.DS_Store","hash":"ed06a70def8b481e44815adacc512b1dd1ca9d08","modified":1711862842881},{"_id":"themes/snail/layout/keynote.ejs","hash":"76adf10eef9057cd6115866b1e8a91796d15dff0","modified":1711862841598},{"_id":"themes/snail/layout/post.ejs","hash":"6c8e056703893596228a13425a7a9f64f6f5d6c2","modified":1711862841798},{"_id":"themes/snail/layout/tags.ejs","hash":"369b73aba39607ba51280bb611037dba04d633fb","modified":1711862841833},{"_id":"themes/snail/layout/page.ejs","hash":"81ed91a585e2037e50d02404b1a28127ac1013c4","modified":1711862841668},{"_id":"source/img/404-bg.jpg","hash":"dded479a06d5165d1f87c63677442aecdf1ac748","modified":1711862847037},{"_id":"source/img/header_img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1711862847193},{"_id":"source/img/signature/Just-do-it-white.png","hash":"c66314974b30c23ae9da2f7e57ca1ead65f00e28","modified":1711862847709},{"_id":"source/img/signature/dusign.png","hash":"cbfb2ac6910c0ad4263f300afcdaf13060257976","modified":1711862847745},{"_id":"source/img/signature/.DS_Store","hash":"5d4742a3eec02334dd2df5ab57fea2a143933757","modified":1711862847662},{"_id":"themes/snail/layout/_widget/.DS_Store","hash":"9c0d84234456e5db3004fe76dd78d0d93efe3fc5","modified":1711862842535},{"_id":"themes/snail/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1711862842572},{"_id":"themes/snail/layout/_widget/friends-blog.ejs","hash":"734d3775017aedac185028924baf890a71a74548","modified":1711862842685},{"_id":"themes/snail/layout/_widget/category.ejs","hash":"710139c577fbb38bd23d996bfc32858da9b55d05","modified":1711862842598},{"_id":"themes/snail/layout/_widget/featured-tags.ejs","hash":"0c9ce1942f1943dc8891a9302a922ef1ffe300c5","modified":1711862842646},{"_id":"themes/snail/layout/_widget/recent-posts.ejs","hash":"ce2bf0c00940ef1afda73f73875ac90b6e86d748","modified":1711862842725},{"_id":"themes/snail/layout/_widget/search.ejs","hash":"5138e624a0f20abcac0132e3e5bddf4698109ed0","modified":1711862842755},{"_id":"themes/snail/layout/_widget/short-about.ejs","hash":"6be02d022f213f341d3de69ebb2628c7df609ab7","modified":1711862842802},{"_id":"themes/snail/layout/_widget/visitor.ejs","hash":"5d8505f7c0e0e01ace05f1c259e8d56289a6eebd","modified":1711862842833},{"_id":"themes/snail/layout/_partial/.DS_Store","hash":"b67df80bf88e0f64ba66ad760f724d8c44d2c390","modified":1711862841908},{"_id":"themes/snail/layout/_partial/comment.ejs","hash":"f64a0dd90aae1304081a1c93b3d0f861b2acc1ba","modified":1711862841943},{"_id":"themes/snail/layout/_partial/footer.ejs","hash":"39685d90b3e4f3cb373322d688c97d9c42282be4","modified":1711873878586},{"_id":"themes/snail/layout/_partial/head.ejs","hash":"de29612052ded08b668d2dccf6b2267b37869a77","modified":1711862842116},{"_id":"themes/snail/layout/_partial/header.ejs","hash":"2f28a517f074cf33b26090e19d397d6d023c37d4","modified":1711862842198},{"_id":"themes/snail/layout/_partial/music.ejs","hash":"492b3cd6393c48203b13b7bab6e3dd8aede0e683","modified":1711862842255},{"_id":"themes/snail/layout/_partial/nav.ejs","hash":"0cd8a7bc62d8fba92ec56a8d5486b11cb85489ee","modified":1711862842315},{"_id":"themes/snail/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1711862842352},{"_id":"themes/snail/layout/_partial/sidebar.ejs","hash":"2e4e528a555917b2a267da4db2440bcc4a7a65ab","modified":1711862842380},{"_id":"themes/snail/layout/_partial/star.ejs","hash":"eec08202adbea86e9f53c7dfa7813833bdb343e7","modified":1711862842442},{"_id":"themes/snail/layout/_partial/toc.ejs","hash":"6fb56caac9f6cc7701edf8c6505c007c9562e0fb","modified":1711862842474},{"_id":"themes/snail/source/css/.DS_Store","hash":"0cff62c01dffa557aea8139bec65d19bab1a406b","modified":1711862842912},{"_id":"themes/snail/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1711862842962},{"_id":"themes/snail/source/css/dusign-common-dark.css","hash":"09c1d5e4d5d623ca1b0f27975860625c48332b92","modified":1711862843083},{"_id":"themes/snail/source/css/dusign-dark.css","hash":"3ec81e310cb5c469e2540649d1632e581d24ca48","modified":1711862843169},{"_id":"themes/snail/source/css/dusign-light.css","hash":"9e47d827447b4141672543bb2d3b4382fc4b2973","modified":1711862843213},{"_id":"themes/snail/source/css/dusign-common-light.css","hash":"11f0d1a854b0ef803a0f0d9c6b744b3ed74253bf","modified":1711862843130},{"_id":"themes/snail/source/css/font-awesome.star.css","hash":"5e536c20b1633dd798b27b1860292edb00bdc5e4","modified":1711862843298},{"_id":"themes/snail/source/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1711862843240},{"_id":"themes/snail/source/css/gitment.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1711862843380},{"_id":"themes/snail/source/css/fonts.googleapis.css","hash":"61735f2f7925a9a90d55475a6c33b6b94d39ba2e","modified":1711862843344},{"_id":"themes/snail/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1711862843427},{"_id":"themes/snail/source/css/rocket.styl","hash":"ede0821bc5b8e02ff87349bd9bf2bc822a537a67","modified":1711862843508},{"_id":"themes/snail/source/css/photography.css","hash":"29426628144eb10ec3c0e42aaacc03ee5de1809f","modified":1711862843470},{"_id":"themes/snail/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1711862843543},{"_id":"themes/snail/source/css/toc.styl","hash":"8126d6469f1fbf790a4e0829ed871c54557360b2","modified":1711862843570},{"_id":"themes/snail/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1711862843618},{"_id":"themes/snail/source/fonts/.DS_Store","hash":"c62411b1d7033164ffeac47a5c5091716b1ef0ed","modified":1711862843948},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1711862844146},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1711862844240},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1711862844275},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1711862844314},{"_id":"themes/snail/source/js/.DS_Store","hash":"2ab9cda44457d3ffbac70955968c866c2ab41d12","modified":1711862845051},{"_id":"themes/snail/source/js/canvas-nest.js","hash":"ccfef66760b1490ebf7d510c8a3a78d7a753601a","modified":1711862845223},{"_id":"themes/snail/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1711862845172},{"_id":"themes/snail/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1711862845333},{"_id":"themes/snail/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1711862845378},{"_id":"themes/snail/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1711862845572},{"_id":"themes/snail/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1711862845623},{"_id":"themes/snail/source/js/line.js","hash":"f43e647e938bcc51d043b1d64ddbfb847f9fee96","modified":1711862845661},{"_id":"themes/snail/source/js/mouse-click.js","hash":"19836369f0c47643e5e2e78edd3d75c43f1717c6","modified":1711862845720},{"_id":"themes/snail/source/js/ribbonDynamic.js","hash":"f37800912f97ae4c9d375608c5aad462847c8e43","modified":1711862845755},{"_id":"themes/snail/source/js/ribbonStatic.js","hash":"552f5b67778ff6282090cf06b33aaeb1a95eca37","modified":1711862845816},{"_id":"themes/snail/source/js/search.js","hash":"7e780c538d23147e4fdc5c19eba5747a137234f3","modified":1711862845864},{"_id":"themes/snail/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1711862845896},{"_id":"themes/snail/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1711862845942},{"_id":"themes/snail/source/img/.DS_Store","hash":"946c77b313a0b54b7752989d970d116de33897e1","modified":1711862844740},{"_id":"themes/snail/source/img/cd_tou.png","hash":"f3be731e88699b3221349f154675f23efe6bbcaf","modified":1711862844803},{"_id":"themes/snail/source/img/cd.png","hash":"9e2948f8fcdd6a33d4d88be26c26cc5a3f284a39","modified":1711862844772},{"_id":"themes/snail/source/img/default.jpg","hash":"22910d296bc4d2a687e1d2c3583d984d77ff119b","modified":1711862844833},{"_id":"themes/snail/source/img/notice.png","hash":"7dd33804c5db9ce303c6518defb0fab36ac443c5","modified":1711862844880},{"_id":"themes/snail/source/img/top-light.png","hash":"35795d86dc6bd0fe217ed9ac5a84c69fe3d89bbc","modified":1711862844911},{"_id":"themes/snail/source/img/tp.png","hash":"4d2a36c85473c8cdbbf0cc8f5930baf27be7af9b","modified":1711862844943},{"_id":"themes/snail/source/img/wave-dark.png","hash":"af6e4c8e6923e2ecbcd8118698c826559a3410f2","modified":1711862844990},{"_id":"themes/snail/source/img/wave-light.png","hash":"876873f352f953ea90b1d428f563572291052f65","modified":1711862845025},{"_id":"themes/snail/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1711862843036},{"_id":"themes/snail/source/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1711862844071},{"_id":"themes/snail/source/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1711862844113},{"_id":"themes/snail/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1711862844192},{"_id":"themes/snail/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1711862845114},{"_id":"themes/snail/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1711862845531},{"_id":"source/img/default.jpg","hash":"c412565f119b763af1c6c9310ec0feaf46f8ece2","modified":1711871960811},{"_id":"source/img/header_img/categories-bg.jpg","hash":"ba837d1b99c73c857e221989d1f34f994f552b03","modified":1711862847441},{"_id":"themes/snail/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1711862843004},{"_id":"themes/snail/source/css/images/ironman.png","hash":"ed4cfd8d6cb29fe389768e78701c1e704de0a4b4","modified":1711862843646},{"_id":"themes/snail/source/css/images/rocket.png","hash":"76f4a29befec0558eba79e91d494b8186ac83bd9","modified":1711862843691},{"_id":"themes/snail/source/css/music-player/.DS_Store","hash":"c222d4075bfee4e45d6724c1973ae854c0faa544","modified":1711862843736},{"_id":"themes/snail/source/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1711862844037},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3g3D_vx3rCubqg.woff2","hash":"7e70fcb471e56b2a19f2252930953b3e60fe1a9f","modified":1711862844349},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gTD_vx3rCubqg.woff2","hash":"72816c753b283b3073922e0dbaf43b7b0eca084a","modified":1711862844396},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gfD_vx3rCubqg.woff2","hash":"080ec6814b7c0524080725bb14771f6acaea1f81","modified":1711862844481},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gbD_vx3rCubqg.woff2","hash":"5978679d456a2caa60c4577d88015f6287541558","modified":1711862844443},{"_id":"themes/snail/source/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gnD_vx3rCs.woff2","hash":"aadbddac4c13b6104b7c1e8734388b8236d21986","modified":1711862844517},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459W1hyyTh89ZNpQ.woff2","hash":"2b17a95811ba31d575f51bc355e64a5fea5bb7ee","modified":1711862844552},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WRhyyTh89ZNpQ.woff2","hash":"87a7218891499b54fc511fba5788d6c571c530da","modified":1711862844588},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WZhyyTh89ZNpQ.woff2","hash":"28d5bef0604f6ff6605018bf5cb0c39becf8ee7d","modified":1711862844614},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WdhyyTh89ZNpQ.woff2","hash":"8569fb80b97a650e8af5e3617e784f9d70759a6a","modified":1711862844661},{"_id":"themes/snail/source/js/gitment.js","hash":"db4ceb1a87f2353ed378f72bdb56a4be3c976425","modified":1711862845287},{"_id":"themes/snail/source/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WlhyyTh89Y.woff2","hash":"513e3f0c1faabe03d220a4482b770b0d7b0c6c15","modified":1711862844699},{"_id":"themes/snail/source/js/music-player/utill.js","hash":"9ebf6aa9fd481305a0aa2f78d9beed3fc0949e8d","modified":1711862846140},{"_id":"themes/snail/source/js/music-player/player.js","hash":"7b20324fb4011203eabc99d992bd85e9bbd5fda9","modified":1711862846083},{"_id":"themes/snail/source/js/music-player/.DS_Store","hash":"af71753e216d93f6e18351e06e7c1fea76198ba5","modified":1711862845974},{"_id":"themes/snail/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1711862845458},{"_id":"themes/snail/source/js/music-player/jquery.min.js","hash":"77e9eed704c96c3eb0180d35c6ba430b3f69a43a","modified":1711862846061},{"_id":"themes/snail/source/css/music-player/css/player.css","hash":"46a1c32c6148bb2a3e017f707fd45cb4b2419237","modified":1711862843787},{"_id":"themes/snail/source/css/music-player/css/reset.css","hash":"939d5d57d6589ee7bd9d0d0b6a4009eec35a8652","modified":1711862843836},{"_id":"themes/snail/source/css/music-player/fonts/iconfont.css","hash":"bc74788146361682bc17cba3058c62bb7b89fa11","modified":1711862843896},{"_id":"themes/snail/source/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1711862844000},{"_id":"source/img/header_img/home-bg-1-dark.jpg","hash":"530b942bbd02083f3cea03e834491027ea9cf324","modified":1711868446008},{"_id":"source/img/header_img/tag-bg.jpg","hash":"abc6dd1036b1abb9f040e7fcabeb5fecca63f59f","modified":1711862847630},{"_id":"source/img/header_img/photography-bg.jpeg","hash":"a2d79feac358d68c8e9b2dd96afd69f7ba31bb7b","modified":1711862847585},{"_id":"source/img/header_img/archive-bg.jpg","hash":"d023ca58c2d02214788fc3499a74ebdfd5c645f5","modified":1711862847390},{"_id":"source/img/header_img/Iron-Man-3.jpg","hash":"157de39599633984edaf15dd6ece681e7e55dd65","modified":1711862847283},{"_id":"public/search.xml","hash":"de3aee09797ad9018748e001a85367262b259e4e","modified":1713004726356},{"_id":"public/baidusitemap.xml","hash":"54eee9880c693ded0bbbbd2f941f4b1f51840466","modified":1713004726356},{"_id":"public/sitemap.xml","hash":"d2a73b725c4a2aa539bf93c6cd4dbb1612a5255c","modified":1713004726356},{"_id":"public/categories/index.html","hash":"79395a493dabea59664c1b88d332546e84696709","modified":1713004726356},{"_id":"public/404.html","hash":"d651f9227efb57635dff49d60703279ea9ae24fc","modified":1713004726356},{"_id":"public/tags/index.html","hash":"db5c0179334eea8cba2b0aaf591233155bfa85fb","modified":1713004726356},{"_id":"public/about/index.html","hash":"7d07d15c1006827b0690e80049216e235a19a368","modified":1713004726356},{"_id":"public/2024/04/13/cd-overview/index.html","hash":"50835ac50bde8bfe201a945da4b9b80cc99bdae1","modified":1713004726356},{"_id":"public/2024/03/31/正则表达式/index.html","hash":"5d72fc3e6bdb0b3f497f01cb787506c56863c2ac","modified":1713004726356},{"_id":"public/archive/index.html","hash":"4bdc5f77db7fef11cec222ac0476d30e274d8eea","modified":1713004726356},{"_id":"public/archives/index.html","hash":"9e1f06946ace8357dfcbdfa9a88cf6c51e70b253","modified":1713004726356},{"_id":"public/archives/2024/index.html","hash":"3e72cfd7d3ed3a8ab0ba29bcc4024057d84defb6","modified":1713004726356},{"_id":"public/archives/2024/03/index.html","hash":"409662b9f2da520868b06056068750dc8ea067ba","modified":1713004726356},{"_id":"public/archives/2024/04/index.html","hash":"ebaa910d119f9fc6140d6f11d592c9b6e7ced878","modified":1713004726356},{"_id":"public/index.html","hash":"619ae75bee3244e266a1a61d799be3cf75f0374e","modified":1713004726356},{"_id":"public/CNAME","hash":"55d5b0b4757a7d65ee4966dd161f394d06d257b7","modified":1713004726356},{"_id":"public/img/language_processing_system.jpg","hash":"9d995fa7143c6bdef46f1880d7d4c63c721be922","modified":1713004726356},{"_id":"public/robots.txt","hash":"a501cb86e0537a749c344cb413bace53b49b147c","modified":1713004726356},{"_id":"public/img/ironman-draw.png","hash":"bf6b382fe359ae325b72c485c1eb73ee024b4dc1","modified":1713004726356},{"_id":"public/img/signature/Just-do-it-white.png","hash":"c66314974b30c23ae9da2f7e57ca1ead65f00e28","modified":1713004726356},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1713004726356},{"_id":"public/img/signature/dusign.png","hash":"cbfb2ac6910c0ad4263f300afcdaf13060257976","modified":1713004726356},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1713004726356},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1713004726356},{"_id":"public/img/cd_tou.png","hash":"f3be731e88699b3221349f154675f23efe6bbcaf","modified":1713004726356},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1713004726356},{"_id":"public/img/cd.png","hash":"9e2948f8fcdd6a33d4d88be26c26cc5a3f284a39","modified":1713004726356},{"_id":"public/img/notice.png","hash":"7dd33804c5db9ce303c6518defb0fab36ac443c5","modified":1713004726356},{"_id":"public/img/tp.png","hash":"4d2a36c85473c8cdbbf0cc8f5930baf27be7af9b","modified":1713004726356},{"_id":"public/img/wave-light.png","hash":"876873f352f953ea90b1d428f563572291052f65","modified":1713004726356},{"_id":"public/img/wave-dark.png","hash":"af6e4c8e6923e2ecbcd8118698c826559a3410f2","modified":1713004726356},{"_id":"public/css/images/ironman.png","hash":"ed4cfd8d6cb29fe389768e78701c1e704de0a4b4","modified":1713004726356},{"_id":"public/img/top-light.png","hash":"35795d86dc6bd0fe217ed9ac5a84c69fe3d89bbc","modified":1713004726356},{"_id":"public/css/images/rocket.png","hash":"76f4a29befec0558eba79e91d494b8186ac83bd9","modified":1713004726356},{"_id":"public/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3g3D_vx3rCubqg.woff2","hash":"7e70fcb471e56b2a19f2252930953b3e60fe1a9f","modified":1713004726356},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1713004726356},{"_id":"public/css/dusign-common-dark.css","hash":"09c1d5e4d5d623ca1b0f27975860625c48332b92","modified":1713004726356},{"_id":"public/css/dusign-common-light.css","hash":"11f0d1a854b0ef803a0f0d9c6b744b3ed74253bf","modified":1713004726356},{"_id":"public/css/fonts.googleapis.css","hash":"61735f2f7925a9a90d55475a6c33b6b94d39ba2e","modified":1713004726356},{"_id":"public/css/rocket.css","hash":"ff363acbf4d07259228a37738221033665b28794","modified":1713004726356},{"_id":"public/css/highlight.css","hash":"8bc5e670b028eda8097f58bdc85269c5124c2951","modified":1713004726356},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1713004726356},{"_id":"public/css/photography.css","hash":"29426628144eb10ec3c0e42aaacc03ee5de1809f","modified":1713004726356},{"_id":"public/css/signature.css","hash":"820fa4743cea34a61808cd8f7de528605c32d7e3","modified":1713004726356},{"_id":"public/css/toc.css","hash":"ed5bba697adcbf9d050a7d489e85fe9034b6693a","modified":1713004726356},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1713004726356},{"_id":"public/js/canvas-nest.js","hash":"ccfef66760b1490ebf7d510c8a3a78d7a753601a","modified":1713004726356},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1713004726356},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1713004726356},{"_id":"public/css/dusign-dark.css","hash":"3ec81e310cb5c469e2540649d1632e581d24ca48","modified":1713004726356},{"_id":"public/css/dusign-light.css","hash":"9e47d827447b4141672543bb2d3b4382fc4b2973","modified":1713004726356},{"_id":"public/css/gitment.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1713004726356},{"_id":"public/css/font-awesome.star.css","hash":"5e536c20b1633dd798b27b1860292edb00bdc5e4","modified":1713004726356},{"_id":"public/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1713004726356},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1713004726356},{"_id":"public/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gfD_vx3rCubqg.woff2","hash":"080ec6814b7c0524080725bb14771f6acaea1f81","modified":1713004726356},{"_id":"public/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gnD_vx3rCs.woff2","hash":"aadbddac4c13b6104b7c1e8734388b8236d21986","modified":1713004726356},{"_id":"public/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gTD_vx3rCubqg.woff2","hash":"72816c753b283b3073922e0dbaf43b7b0eca084a","modified":1713004726356},{"_id":"public/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WZhyyTh89ZNpQ.woff2","hash":"28d5bef0604f6ff6605018bf5cb0c39becf8ee7d","modified":1713004726356},{"_id":"public/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WlhyyTh89Y.woff2","hash":"513e3f0c1faabe03d220a4482b770b0d7b0c6c15","modified":1713004726356},{"_id":"public/fonts/googleapis/JTUSjIg1_i6t8kCHKm459W1hyyTh89ZNpQ.woff2","hash":"2b17a95811ba31d575f51bc355e64a5fea5bb7ee","modified":1713004726356},{"_id":"public/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WdhyyTh89ZNpQ.woff2","hash":"8569fb80b97a650e8af5e3617e784f9d70759a6a","modified":1713004726356},{"_id":"public/fonts/googleapis/JTUSjIg1_i6t8kCHKm459WRhyyTh89ZNpQ.woff2","hash":"87a7218891499b54fc511fba5788d6c571c530da","modified":1713004726356},{"_id":"public/fonts/googleapis/JTURjIg1_i6t8kCHKm45_dJE3gbD_vx3rCubqg.woff2","hash":"5978679d456a2caa60c4577d88015f6287541558","modified":1713004726356},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1713004726356},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1713004726356},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1713004726356},{"_id":"public/js/line.js","hash":"f43e647e938bcc51d043b1d64ddbfb847f9fee96","modified":1713004726356},{"_id":"public/js/mouse-click.js","hash":"19836369f0c47643e5e2e78edd3d75c43f1717c6","modified":1713004726356},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1713004726356},{"_id":"public/js/ribbonDynamic.js","hash":"f37800912f97ae4c9d375608c5aad462847c8e43","modified":1713004726356},{"_id":"public/js/ribbonStatic.js","hash":"552f5b67778ff6282090cf06b33aaeb1a95eca37","modified":1713004726356},{"_id":"public/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1713004726356},{"_id":"public/js/search.js","hash":"7e780c538d23147e4fdc5c19eba5747a137234f3","modified":1713004726356},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1713004726356},{"_id":"public/js/music-player/utill.js","hash":"8155c50df624cf908a0aea51461686d7f5fed2e4","modified":1713004726356},{"_id":"public/js/music-player/player.js","hash":"8c45db99c0606c20622a9588960c059cec8196e3","modified":1713004726356},{"_id":"public/css/music-player/css/reset.css","hash":"7ed29eb21b446c2c062b27197757de156588aa9f","modified":1713004726356},{"_id":"public/css/music-player/fonts/iconfont.css","hash":"bc74788146361682bc17cba3058c62bb7b89fa11","modified":1713004726356},{"_id":"public/css/music-player/css/player.css","hash":"8676c8a79a31ab1872cc07c05a6d5c7e4625e195","modified":1713004726356},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1713004726356},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1713004726356},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1713004726356},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1713004726356},{"_id":"public/js/gitment.js","hash":"db4ceb1a87f2353ed378f72bdb56a4be3c976425","modified":1713004726356},{"_id":"public/js/music-player/jquery.min.js","hash":"e2f3603e23711f6446f278a411d905623d65201e","modified":1713004726356},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1713004726356},{"_id":"public/img/404-bg.jpg","hash":"dded479a06d5165d1f87c63677442aecdf1ac748","modified":1713004726356},{"_id":"public/img/header_img/categories-bg.jpg","hash":"ba837d1b99c73c857e221989d1f34f994f552b03","modified":1713004726356},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1713004726356},{"_id":"public/img/default.jpg","hash":"c412565f119b763af1c6c9310ec0feaf46f8ece2","modified":1713004726356},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1713004726356},{"_id":"public/img/header_img/home-bg-1-dark.jpg","hash":"530b942bbd02083f3cea03e834491027ea9cf324","modified":1713004726356},{"_id":"public/img/header_img/tag-bg.jpg","hash":"abc6dd1036b1abb9f040e7fcabeb5fecca63f59f","modified":1713004726356},{"_id":"public/img/header_img/photography-bg.jpeg","hash":"a2d79feac358d68c8e9b2dd96afd69f7ba31bb7b","modified":1713004726356},{"_id":"public/img/header_img/archive-bg.jpg","hash":"d023ca58c2d02214788fc3499a74ebdfd5c645f5","modified":1713004726356},{"_id":"public/img/header_img/Iron-Man-3.jpg","hash":"157de39599633984edaf15dd6ece681e7e55dd65","modified":1713004726356}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2024-03-31T05:27:26.221Z","updated":"2024-03-31T05:27:26.221Z","path":"404.html","title":"","comments":1,"_id":"cluxysaq60000mwmoc53t13u5","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2016-04-20T20:48:33.000Z","description":"When you get up early and work hard, when you stay up late, when you feel too tired to stand up again, but still support the night when you get up, that is the power of dreams.","header-img":"img/header_img/Iron-Man-3.jpg","comments":1,"_content":"\n> The scenery we often see is that a person always looks up and envy the happiness of others, but finds that he is being looked up and envious. In fact, everyone is happy, but your happiness is often in the eyes of others.\n> &nbsp;\n> Life is a one-way trip. Even if there are some regrets, we have no chance to start all over again. It is better to smile and cherish the future than to confuse the past, because life is not as if.\n> &nbsp;\n> Don't think too much, just do it now.","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2016-04-21 04:48:33\ndescription: \"When you get up early and work hard, when you stay up late, when you feel too tired to stand up again, but still support the night when you get up, that is the power of dreams.\"\nheader-img: \"img/header_img/Iron-Man-3.jpg\"\ncomments: true\n---\n\n> The scenery we often see is that a person always looks up and envy the happiness of others, but finds that he is being looked up and envious. In fact, everyone is happy, but your happiness is often in the eyes of others.\n> &nbsp;\n> Life is a one-way trip. Even if there are some regrets, we have no chance to start all over again. It is better to smile and cherish the future than to confuse the past, because life is not as if.\n> &nbsp;\n> Don't think too much, just do it now.","updated":"2024-03-31T05:27:26.787Z","path":"about/index.html","_id":"cluxysara0002mwmo3po657yo","content":"<blockquote>\n<p>The scenery we often see is that a person always looks up and envy the happiness of others, but finds that he is being looked up and envious. In fact, everyone is happy, but your happiness is often in the eyes of others.<br>&nbsp;<br>Life is a one-way trip. Even if there are some regrets, we have no chance to start all over again. It is better to smile and cherish the future than to confuse the past, because life is not as if.<br>&nbsp;<br>Don’t think too much, just do it now.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>The scenery we often see is that a person always looks up and envy the happiness of others, but finds that he is being looked up and envious. In fact, everyone is happy, but your happiness is often in the eyes of others.<br>&nbsp;<br>Life is a one-way trip. Even if there are some regrets, we have no chance to start all over again. It is better to smile and cherish the future than to confuse the past, because life is not as if.<br>&nbsp;<br>Don’t think too much, just do it now.</p>\n</blockquote>\n"},{"layout":"categories","title":"Categories","header-img":"img/header_img/categories-bg.jpg","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"Approach the New Year with resolve to find the opportunities hidden in each new day.","_content":"","source":"categories/index.md","raw":"---\nlayout: \"categories\"\ntitle: \"Categories\"\nheader-img: \"img/header_img/categories-bg.jpg\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"Approach the New Year with resolve to find the opportunities hidden in each new day.\"\n---\n","updated":"2024-03-31T05:27:26.904Z","path":"categories/index.html","_id":"cluxysarc0004mwmohiun41gi","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"One way to get the most out of life is to look upon it as an adventure.","header-img":"img/header_img/tag-bg.jpg","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"One way to get the most out of life is to look upon it as an adventure.\"\nheader-img: \"img/header_img/tag-bg.jpg\"\n---\n","date":"2024-03-31T05:27:28.333Z","updated":"2024-03-31T05:27:28.333Z","path":"tags/index.html","comments":1,"_id":"cluxysard0005mwmocqf34fas","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"archive","title":"Archives","header-img":"img/header_img/archive-bg.jpg","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"Have goals that are actually meaningful to all of your brain, not just a piece, and immerse yourself in whatever it is you do.","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"img/header_img/archive-bg.jpg\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"Have goals that are actually meaningful to all of your brain, not just a piece, and immerse yourself in whatever it is you do.\"\n---\n","updated":"2024-03-31T05:27:26.849Z","path":"archive/index.html","_id":"cluxysare0006mwmo2k1ldu8r","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"编译器设计 - 正则表达式","catalog":true,"comments":1,"indexing":true,"header-img":"../../../../img/default.jpg","top":false,"tocnum":true,"date":"2024-03-31T07:29:16.000Z","subtitle":null,"_content":"# Compiler Design - Regular Expressions\nThe lexical analyzer needs to scan and identify only a finite set of valid string/token/lexeme that belong to the language in hand. It searches for the pattern defined by the language rules.\nRegular expressions have the capability to express finite languages by defining a pattern for finite strings of symbols. The grammar defined by regular expressions is known as regular grammar. The language defined by regular grammar is known as regular language.\nRegular expression is an important notation for specifying patterns. Each pattern matches a set of strings, so regular expressions serve as names for a set of strings. Programming language tokens can be described by regular languages. The specification of regular expressions is an example of a recursive definition. Regular languages are easy to understand and have efficient implementation.\nThere are a number of algebraic laws that are obeyed by regular expressions, which can be used to manipulate regular expressions into equivalent forms.\n\n## Operations\nThe various operations on languages are:\n- Union of two languages L and M is written as L U M = {s | s is in L or s is in M}\n- Concatenation of two languages L and M is written as LM = {st | s is in L and t is in M}\n- The Kleene Closure of a language L is written as L* = Zero or more occurrence of language L.\n\n## Notations\nIf r and s are regular expressions denoting the languages L(r) and L(s), then\n- Union : (r)|(s) is a regular expression denoting L(r) U L(s)\n- Concatenation : (r)(s) is a regular expression denoting L(r)L(s)\n- Kleene closure : (r)* is a regular expression denoting (L(r))*\n- (r) is a regular expression denoting L(r)\n## Precedence and Associativity\n- *, concatenation (.), and | (pipe sign) are left associative\n- * has the highest precedence\n- Concatenation (.) has the second highest precedence.\n- |(pipe sign) has the lowest precedence of all.\n\n## Representing valid tokens of a language in regular expression\nIf x is a regular expression, then:\n- x* means zero or more occurrence of x. i.e., it can generate { e, x, xx, xxx, xxxx, … }\n- x+ means one or more occurrence of x. i.e., it can generate { x, xx, xxx, xxxx … } or x.x*\n- x? means at most one occurrence of x i.e., it can generate either {x} or {e}.\n- [a-z] is all lower-case alphabets of English language.\n- [A-Z] is all upper-case alphabets of English language.\n- [0-9] is all natural digits used in mathematics.\n\n## Representing occurrence of symbols using regular expressions\nletter = [a – z] or [A – Z]\ndigit = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 or [0-9]\nsign = [ + | - ]\n\n## Representing language tokens using regular expressions\nDecimal = (sign)?(digit)+\nIdentifier = (letter)(letter | digit)*\nThe only problem left with the lexical analyzer is how to verify the validity of a regular expression used in specifying the patterns of keywords of a language. A well-accepted solution is to use finite automata for verification.","source":"_posts/2024-03-31-正则表达式.md","raw":"---\ntitle: 编译器设计 - 正则表达式\ncatalog: true\ncomments: true\nindexing: true\nheader-img: ../../../../img/default.jpg\ntop: false\ntocnum: true\ndate: 2024-03-31 15:29:16\nsubtitle:\ntags:\ncategories:\n---\n# Compiler Design - Regular Expressions\nThe lexical analyzer needs to scan and identify only a finite set of valid string/token/lexeme that belong to the language in hand. It searches for the pattern defined by the language rules.\nRegular expressions have the capability to express finite languages by defining a pattern for finite strings of symbols. The grammar defined by regular expressions is known as regular grammar. The language defined by regular grammar is known as regular language.\nRegular expression is an important notation for specifying patterns. Each pattern matches a set of strings, so regular expressions serve as names for a set of strings. Programming language tokens can be described by regular languages. The specification of regular expressions is an example of a recursive definition. Regular languages are easy to understand and have efficient implementation.\nThere are a number of algebraic laws that are obeyed by regular expressions, which can be used to manipulate regular expressions into equivalent forms.\n\n## Operations\nThe various operations on languages are:\n- Union of two languages L and M is written as L U M = {s | s is in L or s is in M}\n- Concatenation of two languages L and M is written as LM = {st | s is in L and t is in M}\n- The Kleene Closure of a language L is written as L* = Zero or more occurrence of language L.\n\n## Notations\nIf r and s are regular expressions denoting the languages L(r) and L(s), then\n- Union : (r)|(s) is a regular expression denoting L(r) U L(s)\n- Concatenation : (r)(s) is a regular expression denoting L(r)L(s)\n- Kleene closure : (r)* is a regular expression denoting (L(r))*\n- (r) is a regular expression denoting L(r)\n## Precedence and Associativity\n- *, concatenation (.), and | (pipe sign) are left associative\n- * has the highest precedence\n- Concatenation (.) has the second highest precedence.\n- |(pipe sign) has the lowest precedence of all.\n\n## Representing valid tokens of a language in regular expression\nIf x is a regular expression, then:\n- x* means zero or more occurrence of x. i.e., it can generate { e, x, xx, xxx, xxxx, … }\n- x+ means one or more occurrence of x. i.e., it can generate { x, xx, xxx, xxxx … } or x.x*\n- x? means at most one occurrence of x i.e., it can generate either {x} or {e}.\n- [a-z] is all lower-case alphabets of English language.\n- [A-Z] is all upper-case alphabets of English language.\n- [0-9] is all natural digits used in mathematics.\n\n## Representing occurrence of symbols using regular expressions\nletter = [a – z] or [A – Z]\ndigit = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 or [0-9]\nsign = [ + | - ]\n\n## Representing language tokens using regular expressions\nDecimal = (sign)?(digit)+\nIdentifier = (letter)(letter | digit)*\nThe only problem left with the lexical analyzer is how to verify the validity of a regular expression used in specifying the patterns of keywords of a language. A well-accepted solution is to use finite automata for verification.","slug":"正则表达式","published":1,"updated":"2024-04-13T10:09:42.150Z","layout":"post","photos":[],"link":"","_id":"cluxysar70001mwmoaybh31h5","content":"<h1 id=\"Compiler-Design-Regular-Expressions\"><a href=\"#Compiler-Design-Regular-Expressions\" class=\"headerlink\" title=\"Compiler Design - Regular Expressions\"></a>Compiler Design - Regular Expressions</h1><p>The lexical analyzer needs to scan and identify only a finite set of valid string/token/lexeme that belong to the language in hand. It searches for the pattern defined by the language rules.<br>Regular expressions have the capability to express finite languages by defining a pattern for finite strings of symbols. The grammar defined by regular expressions is known as regular grammar. The language defined by regular grammar is known as regular language.<br>Regular expression is an important notation for specifying patterns. Each pattern matches a set of strings, so regular expressions serve as names for a set of strings. Programming language tokens can be described by regular languages. The specification of regular expressions is an example of a recursive definition. Regular languages are easy to understand and have efficient implementation.<br>There are a number of algebraic laws that are obeyed by regular expressions, which can be used to manipulate regular expressions into equivalent forms.</p>\n<h2 id=\"Operations\"><a href=\"#Operations\" class=\"headerlink\" title=\"Operations\"></a>Operations</h2><p>The various operations on languages are:</p>\n<ul>\n<li>Union of two languages L and M is written as L U M = {s | s is in L or s is in M}</li>\n<li>Concatenation of two languages L and M is written as LM = {st | s is in L and t is in M}</li>\n<li>The Kleene Closure of a language L is written as L* = Zero or more occurrence of language L.</li>\n</ul>\n<h2 id=\"Notations\"><a href=\"#Notations\" class=\"headerlink\" title=\"Notations\"></a>Notations</h2><p>If r and s are regular expressions denoting the languages L(r) and L(s), then</p>\n<ul>\n<li>Union : (r)|(s) is a regular expression denoting L(r) U L(s)</li>\n<li>Concatenation : (r)(s) is a regular expression denoting L(r)L(s)</li>\n<li>Kleene closure : (r)<em> is a regular expression denoting (L(r))</em></li>\n<li>(r) is a regular expression denoting L(r)<h2 id=\"Precedence-and-Associativity\"><a href=\"#Precedence-and-Associativity\" class=\"headerlink\" title=\"Precedence and Associativity\"></a>Precedence and Associativity</h2></li>\n<li>*, concatenation (.), and | (pipe sign) are left associative</li>\n<li><ul>\n<li>has the highest precedence</li>\n</ul>\n</li>\n<li>Concatenation (.) has the second highest precedence.</li>\n<li>|(pipe sign) has the lowest precedence of all.</li>\n</ul>\n<h2 id=\"Representing-valid-tokens-of-a-language-in-regular-expression\"><a href=\"#Representing-valid-tokens-of-a-language-in-regular-expression\" class=\"headerlink\" title=\"Representing valid tokens of a language in regular expression\"></a>Representing valid tokens of a language in regular expression</h2><p>If x is a regular expression, then:</p>\n<ul>\n<li>x* means zero or more occurrence of x. i.e., it can generate { e, x, xx, xxx, xxxx, … }</li>\n<li>x+ means one or more occurrence of x. i.e., it can generate { x, xx, xxx, xxxx … } or x.x*</li>\n<li>x? means at most one occurrence of x i.e., it can generate either {x} or {e}.</li>\n<li>[a-z] is all lower-case alphabets of English language.</li>\n<li>[A-Z] is all upper-case alphabets of English language.</li>\n<li>[0-9] is all natural digits used in mathematics.</li>\n</ul>\n<h2 id=\"Representing-occurrence-of-symbols-using-regular-expressions\"><a href=\"#Representing-occurrence-of-symbols-using-regular-expressions\" class=\"headerlink\" title=\"Representing occurrence of symbols using regular expressions\"></a>Representing occurrence of symbols using regular expressions</h2><p>letter = [a – z] or [A – Z]<br>digit = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 or [0-9]<br>sign = [ + | - ]</p>\n<h2 id=\"Representing-language-tokens-using-regular-expressions\"><a href=\"#Representing-language-tokens-using-regular-expressions\" class=\"headerlink\" title=\"Representing language tokens using regular expressions\"></a>Representing language tokens using regular expressions</h2><p>Decimal = (sign)?(digit)+<br>Identifier = (letter)(letter | digit)*<br>The only problem left with the lexical analyzer is how to verify the validity of a regular expression used in specifying the patterns of keywords of a language. A well-accepted solution is to use finite automata for verification.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Compiler-Design-Regular-Expressions\"><a href=\"#Compiler-Design-Regular-Expressions\" class=\"headerlink\" title=\"Compiler Design - Regular Expressions\"></a>Compiler Design - Regular Expressions</h1><p>The lexical analyzer needs to scan and identify only a finite set of valid string/token/lexeme that belong to the language in hand. It searches for the pattern defined by the language rules.<br>Regular expressions have the capability to express finite languages by defining a pattern for finite strings of symbols. The grammar defined by regular expressions is known as regular grammar. The language defined by regular grammar is known as regular language.<br>Regular expression is an important notation for specifying patterns. Each pattern matches a set of strings, so regular expressions serve as names for a set of strings. Programming language tokens can be described by regular languages. The specification of regular expressions is an example of a recursive definition. Regular languages are easy to understand and have efficient implementation.<br>There are a number of algebraic laws that are obeyed by regular expressions, which can be used to manipulate regular expressions into equivalent forms.</p>\n<h2 id=\"Operations\"><a href=\"#Operations\" class=\"headerlink\" title=\"Operations\"></a>Operations</h2><p>The various operations on languages are:</p>\n<ul>\n<li>Union of two languages L and M is written as L U M = {s | s is in L or s is in M}</li>\n<li>Concatenation of two languages L and M is written as LM = {st | s is in L and t is in M}</li>\n<li>The Kleene Closure of a language L is written as L* = Zero or more occurrence of language L.</li>\n</ul>\n<h2 id=\"Notations\"><a href=\"#Notations\" class=\"headerlink\" title=\"Notations\"></a>Notations</h2><p>If r and s are regular expressions denoting the languages L(r) and L(s), then</p>\n<ul>\n<li>Union : (r)|(s) is a regular expression denoting L(r) U L(s)</li>\n<li>Concatenation : (r)(s) is a regular expression denoting L(r)L(s)</li>\n<li>Kleene closure : (r)<em> is a regular expression denoting (L(r))</em></li>\n<li>(r) is a regular expression denoting L(r)<h2 id=\"Precedence-and-Associativity\"><a href=\"#Precedence-and-Associativity\" class=\"headerlink\" title=\"Precedence and Associativity\"></a>Precedence and Associativity</h2></li>\n<li>*, concatenation (.), and | (pipe sign) are left associative</li>\n<li><ul>\n<li>has the highest precedence</li>\n</ul>\n</li>\n<li>Concatenation (.) has the second highest precedence.</li>\n<li>|(pipe sign) has the lowest precedence of all.</li>\n</ul>\n<h2 id=\"Representing-valid-tokens-of-a-language-in-regular-expression\"><a href=\"#Representing-valid-tokens-of-a-language-in-regular-expression\" class=\"headerlink\" title=\"Representing valid tokens of a language in regular expression\"></a>Representing valid tokens of a language in regular expression</h2><p>If x is a regular expression, then:</p>\n<ul>\n<li>x* means zero or more occurrence of x. i.e., it can generate { e, x, xx, xxx, xxxx, … }</li>\n<li>x+ means one or more occurrence of x. i.e., it can generate { x, xx, xxx, xxxx … } or x.x*</li>\n<li>x? means at most one occurrence of x i.e., it can generate either {x} or {e}.</li>\n<li>[a-z] is all lower-case alphabets of English language.</li>\n<li>[A-Z] is all upper-case alphabets of English language.</li>\n<li>[0-9] is all natural digits used in mathematics.</li>\n</ul>\n<h2 id=\"Representing-occurrence-of-symbols-using-regular-expressions\"><a href=\"#Representing-occurrence-of-symbols-using-regular-expressions\" class=\"headerlink\" title=\"Representing occurrence of symbols using regular expressions\"></a>Representing occurrence of symbols using regular expressions</h2><p>letter = [a – z] or [A – Z]<br>digit = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 or [0-9]<br>sign = [ + | - ]</p>\n<h2 id=\"Representing-language-tokens-using-regular-expressions\"><a href=\"#Representing-language-tokens-using-regular-expressions\" class=\"headerlink\" title=\"Representing language tokens using regular expressions\"></a>Representing language tokens using regular expressions</h2><p>Decimal = (sign)?(digit)+<br>Identifier = (letter)(letter | digit)*<br>The only problem left with the lexical analyzer is how to verify the validity of a regular expression used in specifying the patterns of keywords of a language. A well-accepted solution is to use finite automata for verification.</p>\n"},{"title":"编译器设计-概述","catalog":true,"comments":1,"indexing":true,"header-img":"../../../../img/default.jpg","top":false,"tocnum":true,"date":"2024-04-13T09:30:49.000Z","subtitle":null,"_content":"# Compiler Design - Overview\nComputers are a balanced mix of software and hardware. Hardware is just a piece of mechanical device and its functions are being controlled by a compatible software. Hardware understands instructions in the form of electronic charge, which is the counterpart of binary language in software programming. Binary language has only two alphabets, 0 and 1. To instruct, the hardware codes must be written in binary format, which is simply a series of 1s and 0s. It would be a difficult and cumbersome task for computer programmers to write such codes, which is why we have compilers to write such codes.\n## Language Processing System\nWe have learnt that any computer system is made of hardware and software. \nThe hardware understands a language, which humans cannot understand. \nSo we write programs in high-level language, which is easier for us to understand and remember. \nThese programs are then fed into a series of tools and OS components to get the desired code that can be used by the machine. This is known as Language Processing System.\n![LPS](/img/language_processing_system.jpg)\n\nThe high-level language is converted into binary language in various phases. A compiler is a program that converts high-level language to assembly language. Similarly, an assembler is a program that converts the assembly language to machine-level language.\nLet us first understand how a program, using C compiler, is executed on a host machine.\n- User writes a program in C language (high-level language).\n- The C compiler, compiles the program and translates it to assembly program (low-level language).\n- An assembler then translates the assembly program into machine code (object).\n- A linker tool is used to link all the parts of the program together for execution (executable machine code).\n- A loader loads all of them into memory and then the program is executed.\nBefore diving straight into the concepts of compilers, we should understand a few other tools that work closely with compilers.\n\n### Preprocessor\nA preprocessor, generally considered as a part of compiler, is a tool that produces input for compilers. It deals with macro-processing, augmentation, file inclusion, language extension, etc.\n\n### Interpreter\nAn interpreter, like a compiler, translates high-level language into low-level machine language. The difference lies in the way they read the source code or input. A compiler reads the whole source code at once, creates tokens, checks semantics, generates intermediate code, executes the whole program and may involve many passes. In contrast, an interpreter reads a statement from the input, converts it to an intermediate code, executes it, then takes the next statement in sequence. If an error occurs, an interpreter stops execution and reports it. whereas a compiler reads the whole program even if it encounters several errors.\n\n### Assembler\nAn assembler translates assembly language programs into machine code.The output of an assembler is called an object file, which contains a combination of machine instructions as well as the data required to place these instructions in memory.\n\n### Linker\nLinker is a computer program that links and merges various object files together in order to make an executable file. All these files might have been compiled by separate assemblers. The major task of a linker is to search and locate referenced module/routines in a program and to determine the memory location where these codes will be loaded, making the program instruction to have absolute references.\n\n### Loader\nLoader is a part of operating system and is responsible for loading executable files into memory and execute them. It calculates the size of a program (instructions and data) and creates memory space for it. It initializes various registers to initiate execution.\n\n### Cross-compiler\nA compiler that runs on platform (A) and is capable of generating executable code for platform (B) is called a cross-compiler.\n\n### Source-to-source Compiler\nA compiler that takes the source code of one programming language and translates it into the source code of another programming language is called a source-to-source compiler.\n","source":"_posts/2024-04-13-cd-overview.md","raw":"---\ntitle: 编译器设计-概述\ncatalog: true\ncomments: true\nindexing: true\nheader-img: ../../../../img/default.jpg\ntop: false\ntocnum: true\ndate: 2024-04-13 17:30:49\nsubtitle:\ntags:\ncategories:\n---\n# Compiler Design - Overview\nComputers are a balanced mix of software and hardware. Hardware is just a piece of mechanical device and its functions are being controlled by a compatible software. Hardware understands instructions in the form of electronic charge, which is the counterpart of binary language in software programming. Binary language has only two alphabets, 0 and 1. To instruct, the hardware codes must be written in binary format, which is simply a series of 1s and 0s. It would be a difficult and cumbersome task for computer programmers to write such codes, which is why we have compilers to write such codes.\n## Language Processing System\nWe have learnt that any computer system is made of hardware and software. \nThe hardware understands a language, which humans cannot understand. \nSo we write programs in high-level language, which is easier for us to understand and remember. \nThese programs are then fed into a series of tools and OS components to get the desired code that can be used by the machine. This is known as Language Processing System.\n![LPS](/img/language_processing_system.jpg)\n\nThe high-level language is converted into binary language in various phases. A compiler is a program that converts high-level language to assembly language. Similarly, an assembler is a program that converts the assembly language to machine-level language.\nLet us first understand how a program, using C compiler, is executed on a host machine.\n- User writes a program in C language (high-level language).\n- The C compiler, compiles the program and translates it to assembly program (low-level language).\n- An assembler then translates the assembly program into machine code (object).\n- A linker tool is used to link all the parts of the program together for execution (executable machine code).\n- A loader loads all of them into memory and then the program is executed.\nBefore diving straight into the concepts of compilers, we should understand a few other tools that work closely with compilers.\n\n### Preprocessor\nA preprocessor, generally considered as a part of compiler, is a tool that produces input for compilers. It deals with macro-processing, augmentation, file inclusion, language extension, etc.\n\n### Interpreter\nAn interpreter, like a compiler, translates high-level language into low-level machine language. The difference lies in the way they read the source code or input. A compiler reads the whole source code at once, creates tokens, checks semantics, generates intermediate code, executes the whole program and may involve many passes. In contrast, an interpreter reads a statement from the input, converts it to an intermediate code, executes it, then takes the next statement in sequence. If an error occurs, an interpreter stops execution and reports it. whereas a compiler reads the whole program even if it encounters several errors.\n\n### Assembler\nAn assembler translates assembly language programs into machine code.The output of an assembler is called an object file, which contains a combination of machine instructions as well as the data required to place these instructions in memory.\n\n### Linker\nLinker is a computer program that links and merges various object files together in order to make an executable file. All these files might have been compiled by separate assemblers. The major task of a linker is to search and locate referenced module/routines in a program and to determine the memory location where these codes will be loaded, making the program instruction to have absolute references.\n\n### Loader\nLoader is a part of operating system and is responsible for loading executable files into memory and execute them. It calculates the size of a program (instructions and data) and creates memory space for it. It initializes various registers to initiate execution.\n\n### Cross-compiler\nA compiler that runs on platform (A) and is capable of generating executable code for platform (B) is called a cross-compiler.\n\n### Source-to-source Compiler\nA compiler that takes the source code of one programming language and translates it into the source code of another programming language is called a source-to-source compiler.\n","slug":"cd-overview","published":1,"updated":"2024-04-13T10:06:37.106Z","layout":"post","photos":[],"link":"","_id":"cluxysarb0003mwmod0oxalqe","content":"<h1 id=\"Compiler-Design-Overview\"><a href=\"#Compiler-Design-Overview\" class=\"headerlink\" title=\"Compiler Design - Overview\"></a>Compiler Design - Overview</h1><p>Computers are a balanced mix of software and hardware. Hardware is just a piece of mechanical device and its functions are being controlled by a compatible software. Hardware understands instructions in the form of electronic charge, which is the counterpart of binary language in software programming. Binary language has only two alphabets, 0 and 1. To instruct, the hardware codes must be written in binary format, which is simply a series of 1s and 0s. It would be a difficult and cumbersome task for computer programmers to write such codes, which is why we have compilers to write such codes.</p>\n<h2 id=\"Language-Processing-System\"><a href=\"#Language-Processing-System\" class=\"headerlink\" title=\"Language Processing System\"></a>Language Processing System</h2><p>We have learnt that any computer system is made of hardware and software.<br>The hardware understands a language, which humans cannot understand.<br>So we write programs in high-level language, which is easier for us to understand and remember.<br>These programs are then fed into a series of tools and OS components to get the desired code that can be used by the machine. This is known as Language Processing System.<br><img src=\"/img/language_processing_system.jpg\" alt=\"LPS\"></p>\n<p>The high-level language is converted into binary language in various phases. A compiler is a program that converts high-level language to assembly language. Similarly, an assembler is a program that converts the assembly language to machine-level language.<br>Let us first understand how a program, using C compiler, is executed on a host machine.</p>\n<ul>\n<li>User writes a program in C language (high-level language).</li>\n<li>The C compiler, compiles the program and translates it to assembly program (low-level language).</li>\n<li>An assembler then translates the assembly program into machine code (object).</li>\n<li>A linker tool is used to link all the parts of the program together for execution (executable machine code).</li>\n<li>A loader loads all of them into memory and then the program is executed.<br>Before diving straight into the concepts of compilers, we should understand a few other tools that work closely with compilers.</li>\n</ul>\n<h3 id=\"Preprocessor\"><a href=\"#Preprocessor\" class=\"headerlink\" title=\"Preprocessor\"></a>Preprocessor</h3><p>A preprocessor, generally considered as a part of compiler, is a tool that produces input for compilers. It deals with macro-processing, augmentation, file inclusion, language extension, etc.</p>\n<h3 id=\"Interpreter\"><a href=\"#Interpreter\" class=\"headerlink\" title=\"Interpreter\"></a>Interpreter</h3><p>An interpreter, like a compiler, translates high-level language into low-level machine language. The difference lies in the way they read the source code or input. A compiler reads the whole source code at once, creates tokens, checks semantics, generates intermediate code, executes the whole program and may involve many passes. In contrast, an interpreter reads a statement from the input, converts it to an intermediate code, executes it, then takes the next statement in sequence. If an error occurs, an interpreter stops execution and reports it. whereas a compiler reads the whole program even if it encounters several errors.</p>\n<h3 id=\"Assembler\"><a href=\"#Assembler\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h3><p>An assembler translates assembly language programs into machine code.The output of an assembler is called an object file, which contains a combination of machine instructions as well as the data required to place these instructions in memory.</p>\n<h3 id=\"Linker\"><a href=\"#Linker\" class=\"headerlink\" title=\"Linker\"></a>Linker</h3><p>Linker is a computer program that links and merges various object files together in order to make an executable file. All these files might have been compiled by separate assemblers. The major task of a linker is to search and locate referenced module/routines in a program and to determine the memory location where these codes will be loaded, making the program instruction to have absolute references.</p>\n<h3 id=\"Loader\"><a href=\"#Loader\" class=\"headerlink\" title=\"Loader\"></a>Loader</h3><p>Loader is a part of operating system and is responsible for loading executable files into memory and execute them. It calculates the size of a program (instructions and data) and creates memory space for it. It initializes various registers to initiate execution.</p>\n<h3 id=\"Cross-compiler\"><a href=\"#Cross-compiler\" class=\"headerlink\" title=\"Cross-compiler\"></a>Cross-compiler</h3><p>A compiler that runs on platform (A) and is capable of generating executable code for platform (B) is called a cross-compiler.</p>\n<h3 id=\"Source-to-source-Compiler\"><a href=\"#Source-to-source-Compiler\" class=\"headerlink\" title=\"Source-to-source Compiler\"></a>Source-to-source Compiler</h3><p>A compiler that takes the source code of one programming language and translates it into the source code of another programming language is called a source-to-source compiler.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Compiler-Design-Overview\"><a href=\"#Compiler-Design-Overview\" class=\"headerlink\" title=\"Compiler Design - Overview\"></a>Compiler Design - Overview</h1><p>Computers are a balanced mix of software and hardware. Hardware is just a piece of mechanical device and its functions are being controlled by a compatible software. Hardware understands instructions in the form of electronic charge, which is the counterpart of binary language in software programming. Binary language has only two alphabets, 0 and 1. To instruct, the hardware codes must be written in binary format, which is simply a series of 1s and 0s. It would be a difficult and cumbersome task for computer programmers to write such codes, which is why we have compilers to write such codes.</p>\n<h2 id=\"Language-Processing-System\"><a href=\"#Language-Processing-System\" class=\"headerlink\" title=\"Language Processing System\"></a>Language Processing System</h2><p>We have learnt that any computer system is made of hardware and software.<br>The hardware understands a language, which humans cannot understand.<br>So we write programs in high-level language, which is easier for us to understand and remember.<br>These programs are then fed into a series of tools and OS components to get the desired code that can be used by the machine. This is known as Language Processing System.<br><img src=\"/img/language_processing_system.jpg\" alt=\"LPS\"></p>\n<p>The high-level language is converted into binary language in various phases. A compiler is a program that converts high-level language to assembly language. Similarly, an assembler is a program that converts the assembly language to machine-level language.<br>Let us first understand how a program, using C compiler, is executed on a host machine.</p>\n<ul>\n<li>User writes a program in C language (high-level language).</li>\n<li>The C compiler, compiles the program and translates it to assembly program (low-level language).</li>\n<li>An assembler then translates the assembly program into machine code (object).</li>\n<li>A linker tool is used to link all the parts of the program together for execution (executable machine code).</li>\n<li>A loader loads all of them into memory and then the program is executed.<br>Before diving straight into the concepts of compilers, we should understand a few other tools that work closely with compilers.</li>\n</ul>\n<h3 id=\"Preprocessor\"><a href=\"#Preprocessor\" class=\"headerlink\" title=\"Preprocessor\"></a>Preprocessor</h3><p>A preprocessor, generally considered as a part of compiler, is a tool that produces input for compilers. It deals with macro-processing, augmentation, file inclusion, language extension, etc.</p>\n<h3 id=\"Interpreter\"><a href=\"#Interpreter\" class=\"headerlink\" title=\"Interpreter\"></a>Interpreter</h3><p>An interpreter, like a compiler, translates high-level language into low-level machine language. The difference lies in the way they read the source code or input. A compiler reads the whole source code at once, creates tokens, checks semantics, generates intermediate code, executes the whole program and may involve many passes. In contrast, an interpreter reads a statement from the input, converts it to an intermediate code, executes it, then takes the next statement in sequence. If an error occurs, an interpreter stops execution and reports it. whereas a compiler reads the whole program even if it encounters several errors.</p>\n<h3 id=\"Assembler\"><a href=\"#Assembler\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h3><p>An assembler translates assembly language programs into machine code.The output of an assembler is called an object file, which contains a combination of machine instructions as well as the data required to place these instructions in memory.</p>\n<h3 id=\"Linker\"><a href=\"#Linker\" class=\"headerlink\" title=\"Linker\"></a>Linker</h3><p>Linker is a computer program that links and merges various object files together in order to make an executable file. All these files might have been compiled by separate assemblers. The major task of a linker is to search and locate referenced module/routines in a program and to determine the memory location where these codes will be loaded, making the program instruction to have absolute references.</p>\n<h3 id=\"Loader\"><a href=\"#Loader\" class=\"headerlink\" title=\"Loader\"></a>Loader</h3><p>Loader is a part of operating system and is responsible for loading executable files into memory and execute them. It calculates the size of a program (instructions and data) and creates memory space for it. It initializes various registers to initiate execution.</p>\n<h3 id=\"Cross-compiler\"><a href=\"#Cross-compiler\" class=\"headerlink\" title=\"Cross-compiler\"></a>Cross-compiler</h3><p>A compiler that runs on platform (A) and is capable of generating executable code for platform (B) is called a cross-compiler.</p>\n<h3 id=\"Source-to-source-Compiler\"><a href=\"#Source-to-source-Compiler\" class=\"headerlink\" title=\"Source-to-source Compiler\"></a>Source-to-source Compiler</h3><p>A compiler that takes the source code of one programming language and translates it into the source code of another programming language is called a source-to-source compiler.</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}